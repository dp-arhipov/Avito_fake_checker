'use strict';
let descriptionId = '.item-description';

if (document.querySelector(descriptionId) != null) {
        //—Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –æ—Ç—Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –æ–±–Ω–∞—Ä—É–∂–∏—Ç—å—Å—è –±–ª–æ–∫ .item-description —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏—è
        let description = document.querySelector(descriptionId).textContent;

        let infBlockId = '.title-info-actions-item';//–±–ª–æ–∫, –∫—É–¥–∞ –º—ã –±—É–¥–µ–º –≤—Å—Ç–∞–≤–ª—è—Ç—å —Å–≤–æ—é –∏–∫–æ–Ω–∫—É –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
        let infBlock = document.querySelector(infBlockId);
        let fakeMarkers = [
                "–∫–æ–ø–∏—è",
                "–ª—é–∫—Å",
                "lux",
                "—Ñ–∞–±—Ä–∏(–∫|–∫–∞|—á–Ω–æ–µ)",
                "(k|–∫)(a|–∞)—á(e|–µ)(c|—Å)—Ç–≤(o|–æ)",
                "(premium|–ø—Ä–µ–º–∏—É–º|–º–∞–∫—Å–∏–º–∞–ª—å–Ω(—ã–º|–æ–µ)|—Ç–æ–ø|üî•|(–Ω–∞–∏)?–ª—É—á—à(–µ–µ|–µ–º)|–æ—Ç–ª–∏—á–Ω(–æ–µ|–æ–≥–æ|—ã–º)|–≤—ã—Å–æ–∫(–æ–µ|–æ–≥–æ|–∏–º)|—Ö–æ—Ä–æ—à(–µ–µ|–µ–≥–æ|–∏–º)|–∑–∞–≤–æ–¥—Å–∫(–æ–≥–æ|–æ–µ|–∏–º)|–æ—Ä–∏–≥–∏–Ω–∞–ª—å(–Ω–æ–µ|–Ω–æ–≥–æ|–Ω—ã–º)) –∫–∞—á–µ—Å—Ç–≤(–æ|–∞|–æ–º|–µ)",
                "–∫–∞—á–µ—Å—Ç–≤(–æ|–∞|–æ–º|–µ) (premium|–ø—Ä–µ–º–∏—É–º|–º–∞–∫—Å–∏–º–∞–ª—å–Ω(—ã–º|–æ–µ)|—Ç–æ–ø|üî•|(–Ω–∞–∏)?–ª—É—á—à(–µ–µ|–µ–º)|–æ—Ç–ª–∏—á–Ω(–æ–µ|–æ–≥–æ|—ã–º)|–≤—ã—Å–æ–∫(–æ–µ|–æ–≥–æ|–∏–º)|—Ö–æ—Ä–æ—à(–µ–µ|–µ–≥–æ|–∏–º)|–∑–∞–≤–æ–¥—Å–∫(–æ–≥–æ|–æ–µ|–∏–º)|–æ—Ä–∏–≥–∏–Ω–∞–ª—å(–Ω–æ–µ|–Ω–æ–≥–æ|–Ω—ã–º))"
        ];

        let originalMarkers = [
                "–æ—Ä–∏–≥–∏–Ω–∞–ª[^–∞-—è]",
                "—Å–æ—Å—Ç–æ—è–Ω–∏(–µ|–∏)"
        ];

        let alarmMarkers = [
                "premium",
                "–ø—Ä–µ–º–∏—É–º",
                "[a-z][–∞-—è]|[–∞-—è][a-z]",
                "–∫–∞—á–µ—Å—Ç–≤(–æ|–∞) –º–∞—Ç–µ—Ä–∏–∞–ª(–∞|–æ–≤)",
                "–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã(–π|–µ)",
                "–æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω(–∞—è|—ã–µ|–æ–π)|(—Ñ–∏—Ä–º–µ–Ω–Ω(–∞—è|—ã—Ö|–æ–π)) (–∫–æ—Ä–æ–±–∫(–µ|–∞|–∏)|–±–∏—Ä–∫(–µ|–∞|–∏))",
                "–æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ"
        ];


        //—Å–æ–±–∏—Ä–∞–µ–º –Ω–∞—à–∏ —Ä–µ–≥—É–ª—è—Ä–∫–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ç–µ–∫—Å—Ç–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
        let regFake = new RegExp(fakeMarkers.join("|"), "gi");
        let regOrigin = new RegExp(originalMarkers.join("|"), "gi");
        let regAlarm = new RegExp(alarmMarkers.join("|"), "gi");
        let fakeStatus = null;

        if (regOrigin.test(description)) {fakeStatus=0; console.log(fakeStatus);}
        if (regAlarm.test(description)) {fakeStatus=1; console.log(fakeStatus);}
        if (regFake.test(description)) {fakeStatus=2; console.log(fakeStatus);}

        //–¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –Ω–∞—à—É –∏–∫–æ–Ω–∫—É –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
        let banner = document.createElement('div');
        banner.style.display = "flex";
        banner.style.alignItems = "center";
        banner.style.marginLeft = "auto";



        switch (fakeStatus) {
                case 0:
                        banner.innerHTML = '<b>–û—Ä–∏–≥–∏–Ω–∞–ª</b>&nbsp‚úÖ';
                        break;
                case 1:
                        banner.innerHTML = '<b>–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</b>&nbsp‚ö†Ô∏è';
                        break;
                case 2:
                        banner.innerHTML = '<b>–ü–æ–¥–¥–µ–ª–∫–∞</b>&nbsp‚ùå';
                        break;
                default:
                        console.log( "–ê–Ω–∞–ª–∏–∑ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–∞–ª" );
        }


        infBlock.append(banner);

}